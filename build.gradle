plugins {
    id 'application'
    id 'java'
}

group 'com.github.brickwall2900'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

mainClassName = 'com.github.brickwall2900.diary.Main'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    // https://mvnrepository.com/artifact/com.google.crypto.tink/tink
    implementation 'com.google.crypto.tink:tink:1.9.0'

    implementation 'org.httprpc:sierra:2.0'

    // https://mvnrepository.com/artifact/com.formdev/flatlaf
    implementation 'com.formdev:flatlaf:3.1.1'
    implementation 'com.formdev:flatlaf-extras:3.1.1'

    implementation 'org.xhtmlrenderer:flying-saucer-core:9.1.22'
    implementation 'org.commonmark:commonmark:0.21.0'

    implementation 'com.fifesoft:rsyntaxtextarea:3.3.3'
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "${mainClassName}"
    }

    archiveBaseName = "${rootProject.name}"
    tasks.withType(Jar){
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    //from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } setDuplicatesStrategy(DuplicatesStrategy.INCLUDE) }
    with jar
}